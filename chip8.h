#ifndef __chip8_h
#define __chip8_h
#include<iostream>
#include<string>
#include<fstream>
class chip8{
	private:
		unsigned short opcode;
		unsigned char memory[4096];
		unsigned short _stack[16];
		unsigned short stack_ptr;
		//IR is a 16bit Reg that stores memory address
		unsigned short IR;
		//prgram counter
		unsigned short PC;
		//registers
		unsigned char V[16];
		//graphics system
		unsigned char gfx[65 * 32];
		//timers
		unsigned char sound_timer;
		unsigned char delay_timer;
		//key pad
		unsigned char key[16];
		unsigned char chip8_fontset[80] = {
			0xF0, 0x90, 0x90, 0x90, 0xF0, // 0
			0x20, 0x60, 0x20, 0x20, 0x70, // 1
			0xF0, 0x10, 0xF0, 0x80, 0xF0, // 2
			0xF0, 0x10, 0xF0, 0x10, 0xF0, // 3
			0x90, 0x90, 0xF0, 0x10, 0x10, // 4
			0xF0, 0x80, 0xF0, 0x10, 0xF0, // 5
			0xF0, 0x80, 0xF0, 0x90, 0xF0, // 6
			0xF0, 0x10, 0x20, 0x40, 0x40, // 7
			0xF0, 0x90, 0xF0, 0x90, 0xF0, // 8
			0xF0, 0x90, 0xF0, 0x10, 0xF0, // 9
			0xF0, 0x90, 0xF0, 0x90, 0x90, // A
			0xE0, 0x90, 0xE0, 0x90, 0xE0, // B
			0xF0, 0x80, 0x80, 0x80, 0xF0, // C
			0xE0, 0x90, 0x90, 0x90, 0xE0, // D
			0xF0, 0x80, 0xF0, 0x80, 0xF0, // E
			0xF0, 0x80, 0xF0, 0x80, 0x80  // F
		};
	
	public:
		void initialize();
		void loadGame(std::string);
		void emulateCycle();
		void setKeys();
		bool drawFlag;
};
#endif
